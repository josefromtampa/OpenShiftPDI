{
  "_args": [
    [
      {
        "raw": "xhr@https://registry.npmjs.org/xhr/-/xhr-2.0.1.tgz",
        "scope": null,
        "escapedName": "xhr",
        "name": "xhr",
        "rawSpec": "https://registry.npmjs.org/xhr/-/xhr-2.0.1.tgz",
        "spec": "https://registry.npmjs.org/xhr/-/xhr-2.0.1.tgz",
        "type": "remote"
      },
      "/Users/josej/OpenShiftCustom/pdi2test/node_modules/egnyte-js-sdk"
    ]
  ],
  "_from": "xhr@https://registry.npmjs.org/xhr/-/xhr-2.0.1.tgz",
  "_id": "xhr@2.0.1",
  "_inCache": true,
  "_location": "/egnyte-js-sdk/xhr",
  "_phantomChildren": {},
  "_requested": {
    "raw": "xhr@https://registry.npmjs.org/xhr/-/xhr-2.0.1.tgz",
    "scope": null,
    "escapedName": "xhr",
    "name": "xhr",
    "rawSpec": "https://registry.npmjs.org/xhr/-/xhr-2.0.1.tgz",
    "spec": "https://registry.npmjs.org/xhr/-/xhr-2.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/egnyte-js-sdk"
  ],
  "_resolved": "https://registry.npmjs.org/xhr/-/xhr-2.0.1.tgz",
  "_shasum": "e2d3e245a8d8ce48d038a96e95409f96220018d3",
  "_shrinkwrap": null,
  "_spec": "xhr@https://registry.npmjs.org/xhr/-/xhr-2.0.1.tgz",
  "_where": "/Users/josej/OpenShiftCustom/pdi2test/node_modules/egnyte-js-sdk",
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/Raynos/xhr/issues",
    "email": "raynos2@gmail.com"
  },
  "contributors": [
    {
      "name": "Jake Verbaten"
    }
  ],
  "dependencies": {
    "global": "~4.3.0",
    "once": "~1.1.1",
    "parse-headers": "^2.0.0"
  },
  "description": "small xhr abstraction",
  "devDependencies": {
    "pre-commit": "0.0.9",
    "run-browser": "^1.3.1",
    "tap-spec": "^0.1.8",
    "tape": "^2.12.2"
  },
  "homepage": "https://github.com/Raynos/xhr",
  "keywords": [
    "xhr",
    "http",
    "xmlhttprequest",
    "xhr2",
    "browserify"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Raynos/xhr/raw/master/LICENSE"
    }
  ],
  "main": "index",
  "name": "xhr",
  "optionalDependencies": {},
  "readme": "# xhr\n\nA small xhr wrapper. Designed for use with [browserify](http://browserify.org/).\n\nBrowser support: IE8+ and everything else.\n\n## Example\n\n```js\nvar xhr = require(\"xhr\")\n\nxhr({\n    body: someJSONString,\n    uri: \"/foo\",\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n}, function (err, resp, body) {\n    // check resp.statusCode\n})\n```\n\n## `var req = xhr(options, callback)`\n\n```js\ntype XhrOptions = String | {\n    useXDR: Boolean?,\n    sync: Boolean?,\n    uri: String,\n    url: String,\n    method: String?,\n    timeout: Number?,\n    headers: Object?,\n    body: String?,\n    json: Object?,\n    withCredentials: Boolean?\n}\nxhr := (XhrOptions, Callback<Response>) => Request\n```\nthe returned object is either an [`XMLHttpRequest`][3] instance\n    or an [`XDomainRequest`][4] instance (if on IE8/IE9 &&\n    `options.useXDR` is set to `true`)\n\nYour callback will be called once with the arguments\n    ( [`Error`][5], `response` , `body` ) where the response is an object:\n```js\n{\n    body: Object||String,\n    statusCode: Number,\n    method: String,\n    headers: {},\n    url: String,\n    rawRequest: xhr\n}   \n```\n - `body`: HTTP response body - [`xhr.response`][6], [`xhr.responseText`][7] or\n    [`xhr.responseXML`][8] depending on the request type.\n - `rawRequest`: Original  [`XMLHttpRequest`][3] instance\n    or [`XDomainRequest`][4] instance (if on IE8/IE9 &&\n    `options.useXDR` is set to `true`)\n - `headers`: A collection of headers where keys are header names converted to lowercase\n    \n\nYour callback will be called with an [`Error`][5] if there is an error in the browser that prevents sending the request. \nA HTTP 500 response is not going to cause an error to be returned. \n    \nIf `options` is a string then it's a short hand for\n    `{ method: \"GET\", uri: string }`\n\n### `options.method`\n\nSpecify the method the [`XMLHttpRequest`][3] should be opened\n    with. Passed to [`xhr.open`][2]. Defaults to \"GET\"\n\n### `options.useXDR`\n\nSpecify whether this is a cross origin (CORS) request for IE<10.\n    Switches IE to use [`XDomainRequest`][4] instead of `XMLHttpRequest`.\n    Ignored in other browsers.\n    \nNote that headers cannot be set on an XDomainRequest instance.\n\n### `options.sync`\n\nSpecify whether this is a synchrounous request. Note that when\n    this is true the callback will be called synchronously. In\n    most cases this option should not be used. Only use if you\n    know what you are doing!\n\n### `options.body`\n\nPass in body to be send across the [`XMLHttpRequest`][3].\n    Generally should be a string. But anything that's valid as\n    a parameter to [`xhr.send`][1] should work\n\n### `options.uri` or `options.url`\n\nThe uri to send a request too. Passed to [`xhr.open`][2]. `options.url` and `options.uri` are aliases for each other.\n\n### `options.headers`\n\nAn object of headers that should be set on the request. The\n    key, value pair is passed to [`xhr.setRequestHeader`][9]\n\n### `options.timeout`\n\nNumber of miliseconds to wait for response. Defaults to 0 (no timeout). Ignored when `options.sync` is true.\n\n### `options.json`\n\nA valid JSON serializable value to be send to the server. If this\n    is set then we serialize the value and use that as the body.\n    We also set the Content-Type to `\"application/json\"`.\n\nAdditionally the response body is parsed as JSON\n\n### `options.withCredentials`\n\nSpecify whether user credentials are to be included in a cross-origin\n    request. Sets [`xhr.withCredentials`][10]. Defaults to false.\n    \nA wildcard `*` cannot be used in the `Access-Control-Allow-Origin` header when `withCredentials` is true. \n    The header needs to specify your origin explicitly or browser will abort the request.\n    \n\n## MIT Licenced\n\n  [1]: http://xhr.spec.whatwg.org/#the-send()-method\n  [2]: http://xhr.spec.whatwg.org/#the-open()-method\n  [3]: http://xhr.spec.whatwg.org/#interface-xmlhttprequest\n  [4]: http://msdn.microsoft.com/en-us/library/ie/cc288060(v=vs.85).aspx\n  [5]: http://es5.github.com/#x15.11\n  [6]: http://xhr.spec.whatwg.org/#the-response-attribute\n  [7]: http://xhr.spec.whatwg.org/#the-responsetext-attribute\n  [8]: http://xhr.spec.whatwg.org/#the-responsexml-attribute\n  [9]: http://xhr.spec.whatwg.org/#the-setrequestheader()-method\n  [10]: http://xhr.spec.whatwg.org/#the-withcredentials-attribute\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/xhr.git"
  },
  "scripts": {
    "browser": "run-browser test/index.js",
    "test": "run-browser test/index.js -b | tap-spec"
  },
  "version": "2.0.1"
}
