{
  "_args": [
    [
      {
        "raw": "chunking-streams@https://registry.npmjs.org/chunking-streams/-/chunking-streams-0.0.7-b1.tgz",
        "scope": null,
        "escapedName": "chunking-streams",
        "name": "chunking-streams",
        "rawSpec": "https://registry.npmjs.org/chunking-streams/-/chunking-streams-0.0.7-b1.tgz",
        "spec": "https://registry.npmjs.org/chunking-streams/-/chunking-streams-0.0.7-b1.tgz",
        "type": "remote"
      },
      "/Users/josej/OpenShiftCustom/pdi2test/node_modules/egnyte-js-sdk"
    ]
  ],
  "_from": "chunking-streams@https://registry.npmjs.org/chunking-streams/-/chunking-streams-0.0.7-b1.tgz",
  "_id": "chunking-streams@0.0.7-b1",
  "_inCache": true,
  "_location": "/egnyte-js-sdk/chunking-streams",
  "_phantomChildren": {},
  "_requested": {
    "raw": "chunking-streams@https://registry.npmjs.org/chunking-streams/-/chunking-streams-0.0.7-b1.tgz",
    "scope": null,
    "escapedName": "chunking-streams",
    "name": "chunking-streams",
    "rawSpec": "https://registry.npmjs.org/chunking-streams/-/chunking-streams-0.0.7-b1.tgz",
    "spec": "https://registry.npmjs.org/chunking-streams/-/chunking-streams-0.0.7-b1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/egnyte-js-sdk"
  ],
  "_resolved": "https://registry.npmjs.org/chunking-streams/-/chunking-streams-0.0.7-b1.tgz",
  "_shasum": "ecb1bbc8da0abdd5af53304a67f36176b9a8ec88",
  "_shrinkwrap": null,
  "_spec": "chunking-streams@https://registry.npmjs.org/chunking-streams/-/chunking-streams-0.0.7-b1.tgz",
  "_where": "/Users/josej/OpenShiftCustom/pdi2test/node_modules/egnyte-js-sdk",
  "author": {
    "name": "Oleg Elifantiev",
    "email": "oleg@elifantiev.ru"
  },
  "bugs": {
    "url": "https://github.com/Olegas/node-chunking-streams/issues"
  },
  "dependencies": {},
  "description": "NodeJS chunking streams",
  "devDependencies": {
    "assert": "0.4.9",
    "coveralls": "2.3.0",
    "istanbul": "0.1.44",
    "mocha": "1.13.0",
    "mocha-istanbul": "0.2.0"
  },
  "engines": {
    "node": ">=0.10"
  },
  "homepage": "https://github.com/Olegas/node-chunking-streams#readme",
  "keywords": [
    "stream",
    "chunking",
    "s3",
    "gzip"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "chunking-streams",
  "optionalDependencies": {},
  "readme": "node-chunking-streams\n=====================\n\n[![Build Status](https://travis-ci.org/Olegas/node-chunking-streams.png?branch=master)](https://travis-ci.org/Olegas/node-chunking-streams)\n[![Coverage Status](https://coveralls.io/repos/Olegas/node-chunking-streams/badge.png)](https://coveralls.io/r/Olegas/node-chunking-streams)\n[![NPM version](https://badge.fury.io/js/chunking-streams.png)](http://badge.fury.io/js/chunking-streams)\n[![Dependency Status](https://gemnasium.com/Olegas/node-chunking-streams.png)](https://gemnasium.com/Olegas/node-chunking-streams)\n\nA set of Node.js streams to process data in chunks\n\n 1. LineCounter\n 1. SeparatorChunker\n 1. SizeChunker\n 1. GzipChunker\n 1. S3MultipartUploader\n\nTo intstall with NPM\n\n```\nnpm install chunking-streams\n```\n\nTo use with Node.JS\n\n```javascript\n\nvar chunkingStreams = require('chunking-streams');\n\nvar LineCounter = chunkingStreams.LineCounter;\nvar SeparatorChunker = chunkingStreams.SeparatorChunker;\nvar SizeChunker = chunkingStreams.SizeChunker;\n\n// ad so on...\n```\n\n\nLineCounter\n-----------\n\nSimple `TransformStream` which counts lines (`\\n` is a separator) and emit data chunks contains exactly specified number\n of them.\n\n### Configuration\n\n```javascript\nnew LineCounter({\n    numLines: 1,        // number of lines in a single output chunk. 1 is default\n    flushTail: false    // on stream end, flush or not remaining buffer. false is default\n});\n```\n\nSeparatorChunker\n----------------\n\n\nSplit incoming data into chunks based on specified separator. After each separator found data chunk is emitted.\nBy default separator sequence is set to `\\n`, so it is equals to LineCounter with `numLines: 1`\n\n### Configuration\n\n```javascript\nnew SeparatorChunker({\n    separator: '\\n', // separator sequence\n    flushTail: false // on stream end, flush or not remaining buffer. false is default\n});\n```\n\nSizeChunker\n-----------\n\nSplit streams into chunks having exactly specified number of bytes. It is **object mode** stream!\nEach data chunk is an object with the following fields:\n\n  - id: number of chunk (starts from 0)\n  - data: `Buffer` with data\n\nSizeChunker has 2 additional events:\n\n  - chunkStart: emitted on each chunk start.\n  - chunkEnd: emitted on each chunk finish.\n\nBoth event handlers must accept two arguments:\n\n  - id: number of chunk\n  - done: callback function, **must** be called then processing is completed\n\nIf some tail data is not fit fully into specified chunk size, it can be emitted at the end if `flushTail` flag is set.\n\n### Configuration\n\n```javascript\nnew SizeChunker({\n    chunkSize: 1024 // must be a number greater than zero.\n    flushTail: true // flush or not remainder of an incoming stream. Defaults to false\n});\n```\n\n### Example\n```javascript\nvar input = fs.createReadStream('./input'),\n    chunker = new SizeChunker({\n        chunkSize: 1024\n    }),\n    output;\n\nchunker.on('chunkStart', function(id, done) {\n    output = fs.createWriteStream('./output-' + id);\n    done();\n});\n\nchunker.on('chunkEnd', function(id, done) {\n    output.end();\n    done();\n});\n\nchunker.on('data', function(chunk) {\n    output.write(chunk.data);\n});\n\ninput.pipe(chunker);\n```\n\n### S3MultipartUploader\n\n**INCOMPLETE**\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Olegas/node-chunking-streams.git"
  },
  "scripts": {
    "instrument": "node ./node_modules/.bin/istanbul instrument --output lib-cov --no-compact --variable global.__coverage__ lib",
    "test": "node ./node_modules/mocha/bin/mocha -R spec",
    "test-cov": "npm run-script instrument && COVER=CHUNKING ISTANBUL_REPORTERS=lcovonly node ./node_modules/.bin/mocha -R mocha-istanbul"
  },
  "version": "0.0.7-b1"
}
