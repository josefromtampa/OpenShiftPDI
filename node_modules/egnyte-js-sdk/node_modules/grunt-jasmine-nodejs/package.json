{
  "_args": [
    [
      {
        "raw": "grunt-jasmine-nodejs@https://registry.npmjs.org/grunt-jasmine-nodejs/-/grunt-jasmine-nodejs-1.0.2.tgz",
        "scope": null,
        "escapedName": "grunt-jasmine-nodejs",
        "name": "grunt-jasmine-nodejs",
        "rawSpec": "https://registry.npmjs.org/grunt-jasmine-nodejs/-/grunt-jasmine-nodejs-1.0.2.tgz",
        "spec": "https://registry.npmjs.org/grunt-jasmine-nodejs/-/grunt-jasmine-nodejs-1.0.2.tgz",
        "type": "remote"
      },
      "/Users/josej/OpenShiftCustom/pdi2test/node_modules/egnyte-js-sdk"
    ]
  ],
  "_from": "grunt-jasmine-nodejs@https://registry.npmjs.org/grunt-jasmine-nodejs/-/grunt-jasmine-nodejs-1.0.2.tgz",
  "_id": "grunt-jasmine-nodejs@1.0.2",
  "_inCache": true,
  "_location": "/egnyte-js-sdk/grunt-jasmine-nodejs",
  "_phantomChildren": {},
  "_requested": {
    "raw": "grunt-jasmine-nodejs@https://registry.npmjs.org/grunt-jasmine-nodejs/-/grunt-jasmine-nodejs-1.0.2.tgz",
    "scope": null,
    "escapedName": "grunt-jasmine-nodejs",
    "name": "grunt-jasmine-nodejs",
    "rawSpec": "https://registry.npmjs.org/grunt-jasmine-nodejs/-/grunt-jasmine-nodejs-1.0.2.tgz",
    "spec": "https://registry.npmjs.org/grunt-jasmine-nodejs/-/grunt-jasmine-nodejs-1.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [],
  "_resolved": "https://registry.npmjs.org/grunt-jasmine-nodejs/-/grunt-jasmine-nodejs-1.0.2.tgz",
  "_shasum": "2287b4d8844896d2b26e4fdd994dd9626b981aa7",
  "_shrinkwrap": null,
  "_spec": "grunt-jasmine-nodejs@https://registry.npmjs.org/grunt-jasmine-nodejs/-/grunt-jasmine-nodejs-1.0.2.tgz",
  "_where": "/Users/josej/OpenShiftCustom/pdi2test/node_modules/egnyte-js-sdk",
  "author": {
    "name": "Onur Yıldırım",
    "email": "onur@cutepilot.com"
  },
  "bugs": {
    "url": "https://github.com/onury/grunt-jasmine-nodejs/issues"
  },
  "dependencies": {
    "chalk": "^1.0.0",
    "jasmine": "^2.2.1",
    "jasmine-reporters": "^2.0.4"
  },
  "description": "Jasmine (v2.x) Grunt task for NodeJS. Supports latest Jasmine features such as fdescribe, fit, beforeAll, afterAll, etc... Built-in reporters: Default (Console) Reporter, JUnit XML, NUnit XML, TeamCity, TAP Reporter.",
  "devDependencies": {
    "grunt": "^0.4.5"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "files": [
    "tasks",
    "LICENSE"
  ],
  "homepage": "https://github.com/onury/grunt-jasmine-nodejs",
  "keywords": [
    "jasmine",
    "jasmine-node",
    "grunt",
    "gruntplugin",
    "node",
    "task",
    "runner",
    "spec",
    "test",
    "edge",
    "junit",
    "nunit",
    "teamcity",
    "tap",
    "console",
    "2"
  ],
  "license": "MIT",
  "name": "grunt-jasmine-nodejs",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": "^0.4.5"
  },
  "readme": "# grunt-jasmine-nodejs\n\nJasmine (v2.x) Grunt multi-task for NodeJS with built-in reporters such as Default (Console) Reporter, JUnit XML, NUnit XML, TeamCity, TAP Reporter. Supports the latest Jasmine features such as `fdescribe`, `fit`, `beforeAll`, `afterAll`, etc...\n\n> Version: 1.0.2  \n> Author: Onur Yıldırım (onury) © 2015  \n> Licensed under the MIT License.  \n\n![Example Screenshot](https://raw.github.com/onury/grunt-jasmine-nodejs/master/screenshots/verbose-report.jpg)\n\n## Getting Started\n\nThis plugin requires Grunt `^0.4.5`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-jasmine-nodejs --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-jasmine-nodejs');\n```\n\n## jasmine_nodejs task\n\n_Run this task with the `grunt jasmine_nodejs` command._  \n_The `--verbose` option will additionally output list of enabled reporters, spec and helper file lists._\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\n### Options\n\n#### specNameSuffix\n\nType: `String|Array`  Default: `\"spec.js\"`  \nCase-insensitive suffix(es) for the spec files, including the extension. Only files ending with this suffix will be executed within the specified `specs` destination(s).\n\n#### helperNameSuffix\n\nType: `String|Array`  Default: `\"helper.js\"`  \nCase-insensitive suffix(es) for the helper files, including the extension. Only files ending with this suffix will be executed within the specified `helpers` destination(s).\n\n#### useHelpers\n\nType: `Boolean`  Default: `true`  \nSpecifies whether to execute the helper files.\n\n#### reporters\n\nType: `Object`  Default: `undefined`  \nDefines a list of built-in Jasmine reporter configurations to be used. If omitted, `console` reporter will be used as default. See the definitions and corresponding options for each reporter below.  \n\n- **reporters.console**  \n    The built-in default reporter that outputs the detailed test results to the console, with colors.  \n\n    + **colors** — Type: `Boolean` Default: `true`  \n    Specifies whether the output should have colored text.  \n\n    + **cleanStack** — Type: `Boolean` Default: `true`  \n    Specifies whether to filter out lines with jasmine-core path from stacks.  \n\n    + **verbose** — Type: `Boolean` Default: `true`  \n    Specifies whether the reporter output should be verbose.  \n\n- **reporters.junit**  \n    JUnit XML Reporter that outputs test results to a file in JUnit XML Report format. The default option values are set to create as few .xml files as possible. It is possible to save a single XML file, or an XML file for each top-level `describe`, or an XML file for each `describe` regardless of nesting.  \n\n    + **savePath** — Type: `String` Default: `\"\"`  \n    Defines the directory path to save output report files. This directory will be automatically created if it does not already exist.  \n\n    + **filePrefix** — Type: `String` Default: `\"junitresults-\"`  \n    Defines the string value that is prepended to the XML output file. If `consolidateAll` is true, the default is simply `\"junitresults\"` and this becomes the actual filename, i.e. `\"junitresults.xml\"`.  \n\n    + **consolidateAll** — Type: `Boolean` Default: `true`  \n    Specifies whether to save all test results in a single file. If set to `true`, `filePrefix` is treated as the full file name (excluding extension).  \n\n    + **consolidate** — Type: `Boolean` Default: `true`  \n    Specifies whether to save nested describes within the same file as their parent. Setting to `true` does nothing if `consolidateAll` is also `true`. Setting to `false` will also set `consolidateAll` to `false`.  \n\n    + **useDotNotation** — Type: `Boolean` Default: `true`  \n    Specifies whether to separate suite names with dots instead of spaces. e.g. `Class.init` instead of `Class init`.   \n\n- **reporters.nunit**  \n    NUnit XML Reporter that outputs test results to a file in NUnit XML Report format. Allows the test results to be used in java based CI systems like Jenkins.  \n\n    + **savePath** — Type: `String` Default: `\"\"`  \n    Defines the directory path to save output report files. This directory will be automatically created if it does not already exist.  \n\n    + **filename** — Type: `String` Default: `\"nunitresults.xml\"`  \n    Defines the name of xml output file.  \n\n    + **reportName** — Type: `String` Default: `\"Jasmine Results\"`  \n    Defines the name for parent test-results node.  \n\n- **reporters.teamcity**  \n    TeamCity Reporter that outputs test results for the Teamcity build system. There are no options to specify for this reporter. Just set this to `true` or `{}` to enable the reporter.   \n\n- **reporters.tap**  \n    Reporter for Test Anything Protocol ([TAP](http://en.wikipedia.org/wiki/Test_Anything_Protocol)), that outputs tests results to console. There are no options to specify for this reporter. Just set this to `true` or `{}` to enable the reporter.  \n\n#### customReporters\n\nType: `Array`  Default: `undefined`  \nDefines a list of custom Jasmine reporters to be used. Each item should be an initialized reporter instance with interfaces such as `jasmineDone`, `specDone`, etc...  \n\n### Usage Example\n\n```js\ngrunt.initConfig({\n    jasmine_nodejs: {\n        // task specific (default) options\n        options: {\n            specNameSuffix: \"spec.js\", // also accepts an array\n            helperNameSuffix: \"helper.js\",\n            useHelpers: false,\n            // configure one or more built-in reporters\n            reporters: {\n                console: {\n                    colors: true,\n                    cleanStack: true,\n                    verbose: true\n                },\n                junit: {\n                    savePath: \"./reports\",\n                    filePrefix: \"junit-report\",\n                    consolidate: true,\n                    useDotNotation: true\n                },\n                nunit: {\n                    savePath: \"./reports\",\n                    filename: \"nunit-report.xml\",\n                    reportName: \"Test Results\"\n                },\n                teamcity: false,\n                tap: false\n            },\n            // add custom Jasmine reporter(s)\n            customReporters: []\n        },\n        your_target: {\n            // target specific options\n            options: {\n                useHelpers: true\n            },\n            // spec files\n            specs: [\n                \"test/lib/**\",\n                \"test/core/**\"\n            ],\n            helpers: [\n                \"test/helpers/**\"\n            ]\n        }\n    }\n});\ngrunt.loadNpmTasks('grunt-jasmine-nodejs');\n```\n  \n_Note 1: The target-level `reporters` object will override the task-level `reporters` object all together. They will not be merged._\n\n_Note 2: If you're migrating from v0.4.x, task options used for the default reporter (`showColors` and `verboseReport`) are DEPRECATED and will be removed in a future release. Use the new (refactored) `reporters.console.colors` and `reporters.console.verbose` options instead._\n  \n\n## Changelog\n\n- **v1.0.2** (2015-03-11)  \n    + Fixed *undefined suite description* issue for focused specs (`fit(...)`) in Console Reporter; which was breaking the spec-run. (Fixes [Issue #6](https://github.com/onury/grunt-jasmine-nodejs/issues/9))    \n\n    ---\n\n- **v1.0.1** (2015-03-06)  \n    + Fixed Console Reporter symbols and colors for Windows platforms. (Fixes [Issue #6](https://github.com/onury/grunt-jasmine-nodejs/issues/6))  \n\n    ---\n\n- **v1.0.0** (2015-03-04)  \n    + Added new reporters: JUnit XML Reporter, NUnit XML Reporter, TeamCity Reporter, TAP Reporter. (Fulfills [Issue #4](https://github.com/onury/grunt-jasmine-nodejs/issues/4)). Implemented using [jasmine-reporters](https://github.com/larrymyers/jasmine-reporters).  \n    + Added new task option `reporters`. This object defines enabled reporters to be used in conjunction. See documentation.  \n    + Deprecated task options: `showColors` and `verboseReport`. These are refactored under `reporters.console` object.  \n    + Added new option for console reporter: `cleanStack`.  \n    + Added support for adding custom reporters. See `customReporters` task option.  \n    + Better output for Grunt `--verbose` command.  \n    + Code revisions and clean-up.  \n\n    ---\n\n- v0.4.1 (2015-03-03)  \n    + Fixes for `null` stack trace & peer jasmine-core. ([PR #3](https://github.com/onury/grunt-jasmine-nodejs/pull/3) by [@fiznool](https://github.com/fiznool))  \n\n    ---\n  \n- v0.4.0 (2015-03-01)  \n    + Fixed a concatenation issue that would prevent helper-files from loading. (Fixes [Issue #1](https://github.com/onury/grunt-jasmine-nodejs/issues/1))  \n    + Added new task option `verboseReport` which reports a verbose list of all suites.  \n    + Improved reporter output.  \n    + Updated test example (added helper file).  \n    + Code clean-up.  \n\n    ---\n  \n- v0.3.5 (2015-02-12)  \n    + Cleaner error stacks. Filtered out lines with jasmine-core path.  \n    + Fixed a typo that caused the task to throw a `TypeError` when a test fails.  \n    + Better reporter console output.  \n\n    ---\n  \n- v0.3.1 (2015-02-07)  \n    + Fixed timer (zero elapsed time) issue in `jasmine.reporter.js`.  \n\n    ---\n  \n- v0.3.0 (2015-02-07)  \n    + Updated Jasmine-core to latest version (2.2.1).  \n    + Added reporter for Jasmine output.  \n\n  \n ",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/onury/grunt-jasmine-nodejs.git"
  },
  "scripts": {},
  "version": "1.0.2"
}
